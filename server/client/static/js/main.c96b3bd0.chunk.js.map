{"version":3,"sources":["components/layout/information.jsx","components/service/localStorageService.js","components/service/httpService.js","components/service/userService.js","components/hooks/useAuth.jsx","components/utils/ validator.js","components/formField.jsx","components/layout/loginFormUser.jsx","components/layout/loginFormAdmin.jsx","components/layout/login.jsx","components/layout/ui/navProfile.jsx","components/navBar.jsx","components/table/tableHeader.jsx","components/utils/timerCount.jsx","components/layout/ui/executor.jsx","components/table/tableBody.jsx","components/pagination.jsx","components/listGroupTask.jsx","components/form/multiSelectField.jsx","components/service/executorService.js","components/hooks/useExecutor.jsx","components/service/docService.js","components/hooks/useAddDocData.jsx","components/utils/sortData.js","components/hooks/useDocData.jsx","components/form/removeFormExecutor.jsx","components/table/tableDoc.jsx","components/utils/paginate.js","components/table/raportData.jsx","components/layout/raportList.jsx","components/createNewDataTable.jsx","components/form/selectField.jsx","components/form/checkField.jsx","components/formRegisterUser.jsx","components/adminPanel.jsx","components/layout/logOut.jsx","components/table/userDataList.jsx","App.js","index.js"],"names":["Information","className","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","http","axios","create","baseURL","configFile","apiPath","authService","refresh","a","post","grant_type","refresh_token","data","interceptors","request","use","config","isFireBase","containSlash","test","url","slice","now","params","Authorization","error","Promise","reject","response","res","content","id","Object","keys","map","key","status","console","log","toast","httpService","get","put","delete","patch","userEndPoint","adminEndPoint","userService","payload","_id","createAdmin","getCurrentUser","getCurrentAdmin","httpAuth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","setError","currentUser","setUser","isLoading","setLoading","allUserAdmin","setAllUserAdmin","history","useHistory","email","password","rest","createUser","errorCatcher","code","message","Error","formType","getAdminData","getUserData","admin","find","item","useEffect","undefined","Provider","value","signIn","signUp","logOut","push","signInAdmin","signUpAdmin","validator","errors","validate","validateMethod","statusValidate","trim","length","fieldName","FormField","name","onChange","styleInput","nameLabel","description","type","style","placeholder","fontSize","color","htmlFor","LoginFormUser","handleChange","handleSubmit","errorMessage","isValid","inputstyle","width","onSubmit","border","boxShadow","disabled","LoginFormAdmin","Login","useParams","setFormType","setData","setErrors","setErrorMessage","toggleFormType","prevState","target","prevstate","validatorConfig","isRequired","e","preventDefault","newData","textAlign","padding","borderRadius","outline","role","onClick","NavProfile","isOpen","setOpen","to","NavBar","styleLink","opacity","fontWeight","textShadow","textDecoration","link","listStyle","TableHeader","TimerCount","time","dataTime","split","parse","deadline","hours","Math","floor","Executor","ID","executor","elem","TableBody","removeExecutor","setCurrenElem","getNumOrTime","dateEndTime","dateCurrentTime","getDayCount","reverse","join","background","el","i","inWork","periodOfExecution","nameDoc","numberDoc","dateDoc","punctDoc","maxWidth","minWidth","executionOrder","nameInitiator","clickBtn","Pagination","itemsCount","pageSize","onPageChange","currentPage","nextPage","prevPage","pageCount","ceil","pages","_","range","gridColumnStart","page","href","ListGroupTask","onItemSelect","selectExecutor","handleResetFilter","marginRight","values","MultiSelectField","options","label","optionsArray","Array","isArray","optionName","isMulti","closeMenuOnSelect","classNamePrefix","executorService","ExecutorContext","useExecutor","ExecutorProvider","setExecutor","getExecutor","docDataEndPoint","docDataService","update","AddDataDocContext","useAddData","AddDataProvider","nameExecutor","createData","signUpData","updateData","sortData","arr","sort","b","DocDataContext","useDocData","DocDataProvider","docData","setDocData","getData","sortContent","RemoveFormExecutor","stateDispaly","setStateDispaly","selectData","executorList","q","hiddenPopap","newInWork","arrOne","arrTwo","result","forEach","indexOf","search","search2","styleGrid","gridTemplateColumns","margin","TableDoc","setCurrentPage","setSelect","setSelectData","count","setCount","filteredExecutor","filter","user","dataUserCrop","items","pageNumber","startIndex","take","paginate","countTasks","pageIndex","RaportData","currentColorRow","Number","typeDoc","executorName","replace","RaportList","String","CreateNewDataTable","getId","handleChangeForText","convertTime","SelectField","defaultOption","option","CheckField","checked","FormRegisterUser","handleChangeSelectForm","AdminPanel","LogOut","UserDataList","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c96b3bd0.chunk.js","sourcesContent":["import React from \"react\";\nconst Information = () => {\n    return (\n        <h1 className=\"d-flex align-items-center justify-content-center mt-5 pt-5\">\n            info\n        </h1>\n    );\n};\n\nexport default Information;\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    accessToken,\r\n    userId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, userId);\r\n    localStorage.setItem(TOKEN_KEY, accessToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\nexport default localStorageService;\r\n","import axios from \"axios\";\r\nimport configFile from \"../../configFile.json\";\r\nimport { toast } from \"react-toastify\";\r\nimport localStorageService from \"./localStorageService\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiPath\r\n});\r\nconst authService = {\r\n    refresh: async () => {\r\n        const { data } = await http.post(\"/auth/token\", {\r\n            grant_type: \"refresh_token\",\r\n            refresh_token: localStorageService.getRefreshToken()\r\n        });\r\n        return data;\r\n    }\r\n};\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n         const expiresDate = localStorageService.getTokenExpiresDate();\r\n         const refreshToken = localStorageService.getRefreshToken();\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n        } else {\r\n            if (refreshToken && expiresDate < Date.now()) {\r\n                const data = await authService.refresh();\r\n                localStorageService.setTokens(data);\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.params = {\r\n                    ...config.params,\r\n                    Authorization: `Bearer ${accessToken}`\r\n                };\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transformData(data) {\r\n    return data && !data.id\r\n        ? Object.keys(data).map((key) => ({\r\n              ...data[key]\r\n          }))\r\n        : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        res.data = { content: res.data };\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Unexpected error или злая ошибка\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete,\r\n    patch: http.patch\r\n};\r\nexport default httpService;\r\n","import httpService from \"./httpService\";\r\n// import localStorageService from \"./localStorageService\";\r\n\r\nconst userEndPoint = \"/user/\";\r\nconst adminEndPoint = \"/administrator/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const data = await httpService.put(\r\n            userEndPoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    createAdmin: async (payload) => {\r\n        const data = await httpService.put(\r\n            adminEndPoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndPoint\r\n        );\r\n        // console.log(data);\r\n        return data;\r\n    },\r\n    getCurrentAdmin: async () => {\r\n        const { data } = await httpService.get(\r\n            adminEndPoint\r\n        );\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default userService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport localStorageService, { setTokens } from \"../service/localStorageService\";\r\nimport userService from \"../service/userService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport configFile from \"../../configFile.json\";\r\n\r\nconst httpAuth = axios.create({\r\n    baseURL: configFile.apiPath + \"/auth/\"\r\n});\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\nconst AuthProvider = ({ children }) => {\r\n    const [error, setError] = useState(null);\r\n    const [currentUser, setUser] = useState();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [allUserAdmin, setAllUserAdmin] = useState();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getAdminData();\r\n    }, []);\r\n\r\n    async function signUp({ email, password, ...rest }) {\r\n        const url = `signUp`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                ...rest\r\n            });\r\n            setTokens(data);\r\n            await createUser({\r\n                _id: data.userId,\r\n                email,\r\n                ...rest\r\n            });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"INVALID_EMAIL\") {\r\n                    throw new Error(\"пользователь с таким Email не существует\");\r\n                }\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    throw new Error(\"Пароль введен некорректно\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function signUpAdmin({ email, password, ...rest }) {\r\n        const url = `signUp`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                ...rest\r\n            });\r\n            setTokens(data);\r\n            await createAdmin({\r\n                _id: data.userId,\r\n                email,\r\n                ...rest\r\n            });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"INVALID_EMAIL\") {\r\n                    throw new Error(\"пользователь с таким Email не существует\");\r\n                }\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    throw new Error(\"Пароль введен некорректно\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function signInAdmin({ email, password, formType }) {\r\n        const url = `signInWithPassword`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                formType\r\n            });\r\n            setTokens(data);\r\n            await getAdminData();\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"INVALID_EMAIL\") {\r\n                    throw new Error(\"пользователь с таким Email не существует\");\r\n                }\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    throw new Error(\"Пароль введен некорректно\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    async function signIn({ email, password, formType }) {\r\n        const url = `signInWithPassword`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                email,\r\n                password,\r\n                formType\r\n            });\r\n            setTokens(data);\r\n            await getUserData();\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"INVALID_EMAIL\") {\r\n                    throw new Error(\"пользователь с таким Email не существует\");\r\n                }\r\n                if (message === \"INVALID_PASSWORD\") {\r\n                    throw new Error(\"Пароль введен некорректно\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function logOut() {\r\n        localStorageService.removeAuthData();\r\n        setUser(null);\r\n        history.push(\"/login\");\r\n    }\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    async function createAdmin(data) {\r\n        try {\r\n            const { content } = await userService.createAdmin(data);\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    async function getUserData() {\r\n        try {\r\n            const { content } = await userService.getCurrentUser();\r\n            const admin = content.find(\r\n                (item) => item._id === localStorageService.getUserId()\r\n            );\r\n            setUser(admin);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    async function getAdminData() {\r\n        try {\r\n            const { content } = await userService.getCurrentAdmin();\r\n            const admin = await content.find(\r\n                (item) => item._id === localStorageService.getUserId()\r\n            );\r\n            setAllUserAdmin(content);\r\n            setUser(admin);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (localStorageService.getAccessToken()) {\r\n            if (allUserAdmin !== undefined) {\r\n                // console.log(allUserAdmin);\r\n                const admin = allUserAdmin.find(\r\n                    (item) => item._id === localStorageService.getUserId()\r\n                );\r\n                setUser(admin);\r\n                // console.log(admin);\r\n            }\r\n            // console.log(\"+\");\r\n            getUserData();\r\n            getAdminData();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    // console.log(currentUser);\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                signIn,\r\n                signUp,\r\n                currentUser,\r\n                logOut,\r\n                signInAdmin,\r\n                signUpAdmin\r\n            }}\r\n        >\r\n            {!isLoading ? children : \"Идет загрузка\"}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default AuthProvider;\r\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst FormField = ({\n    name,\n    value,\n    onChange,\n    styleInput,\n    nameLabel,\n    description,\n    type\n}) => {\n    return (\n        <div className=\"d-flex flex-column-reverse align-items-center m-2\">\n            <input\n                className=\"p-1\"\n                style={styleInput}\n                type={type}\n                id={name}\n                name={name}\n                value={value}\n                onChange={onChange}\n                placeholder={description}\n            />\n            <label\n                style={{ fontSize: \"20px\", color: \"grey\" }}\n                className=\"mb-3\"\n                htmlFor={name}\n            >\n                {nameLabel}\n            </label>\n        </div>\n    );\n};\nFormField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    styleInput: PropTypes.object,\n    nameLabel: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string\n};\nexport default FormField;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormField from \"../formField\";\r\n\r\nconst LoginFormUser = ({\r\n    handleChange,\r\n    handleSubmit,\r\n    errorMessage,\r\n    data,\r\n    isValid,\r\n    inputstyle\r\n}) => {\r\n    return (\r\n        <>\r\n            <form\r\n                style={{ width: \"20\" }}\r\n                onSubmit={handleSubmit}\r\n                className=\"d-flex flex-column align-items-center p-4 mt-5\"\r\n            >\r\n                {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n                <FormField\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Логин пользователя\"}\r\n                    description={\"введите логин\"}\r\n                    type=\"text\"\r\n                />\r\n                <FormField\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Пароль\"}\r\n                    description={\"введите пароль\"}\r\n                    type=\"text\"\r\n                />\r\n                <button\r\n                    style={{\r\n                        border: \"none\",\r\n                        boxShadow: \"0px 0px 34px #d1cbcb\"\r\n                    }}\r\n                    className=\"btn btn-outline-secondary mt-4 d-md-flex justify-content-md-center\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid || errorMessage}\r\n                >\r\n                    ввести данные\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nLoginFormUser.propTypes = {\r\n    handleChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n    errorMessage: PropTypes.string,\r\n    data: PropTypes.object,\r\n    inputstyle: PropTypes.object,\r\n    isValid: PropTypes.bool\r\n};\r\n\r\nexport default LoginFormUser;\r\n","import React from \"react\";\r\nimport FormField from \"../formField\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LoginFormAdmin = ({\r\n    handleChange,\r\n    handleSubmit,\r\n    errorMessage,\r\n    data,\r\n    isValid,\r\n    inputstyle\r\n}) => {\r\n    return (\r\n        <>\r\n            <form\r\n                style={{ width: \"20%\" }}\r\n                onSubmit={handleSubmit}\r\n                className=\"d-flex flex-column align-items-center p-4 mt-5\"\r\n            >\r\n                {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n                <FormField\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Вход администратора\"}\r\n                    description={\"введите логин\"}\r\n                    type=\"text\"\r\n                />\r\n                <FormField\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Пароль\"}\r\n                    description={\"введите пароль\"}\r\n                    type=\"text\"\r\n                />\r\n                <button\r\n                    style={{\r\n                        border: \"none\",\r\n                        boxShadow: \"0px 0px 34px #d1cbcb\"\r\n                    }}\r\n                    className=\"btn btn-outline-secondary mt-4 d-md-flex justify-content-md-center\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid || errorMessage}\r\n                >\r\n                    ввести данные\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\nLoginFormAdmin.propTypes = {\r\n    handleChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func,\r\n    errorMessage: PropTypes.string,\r\n    data: PropTypes.object,\r\n    inputstyle: PropTypes.object,\r\n    isValid: PropTypes.bool\r\n};\r\nexport default LoginFormAdmin;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { validator } from \"../utils/ validator\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport LoginFormUser from \"./loginFormUser\";\nimport LoginFormAdmin from \"./loginFormAdmin\";\nimport { useParams } from \"react-router-dom\";\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"registerAdmin\" ? type : \"login\"\n    );\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        formType\n    });\n    const [errors, setErrors] = useState({});\n    const [errorMessage, setErrorMessage] = useState(null);\n    const history = useHistory();\n    const { signIn, signInAdmin } = useAuth();\n\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"registerAdmin\" ? \"login\" : \"registerAdmin\"\n        );\n    };\n    const handleChange = ({ target }) => {\n        setData((prevstate) => ({\n            ...prevstate,\n            [target.name]: target.value\n        }));\n        setErrorMessage(null);\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        try {\n            const newData = {\n                ...data,\n                formType\n            };\n            if (formType === \"registerAdmin\") {\n                await signInAdmin(newData);\n                return history.push(\"/\");\n            }\n            if (formType === \"login\") {\n                await signIn(newData);\n                history.push(\"/information\");\n            }\n        } catch (error) {\n            setErrors(error);\n            setErrorMessage(error.message);\n        } finally {\n            setData({\n                email: \"\",\n                password: \"\"\n            });\n        }\n    };\n    const inputstyle = {\n        textAlign: \"center\",\n        padding: \"8px\",\n        borderRadius: \"12px\",\n        border: \"none\",\n        outline: \"none\",\n        boxShadow: \"1px 1px 14px #d1cbcb\"\n        // boxShadow: \"1px 1px 14px #ff9494\"\n    };\n    return (\n        <>\n            <div className=\"d-flex flex-column-reverse align-items-center m-4\">\n                {formType === \"registerAdmin\" ? (\n                    <>\n                        <p>\n                            Если ты администратор\n                            <a role=\"button\" onClick={toggleFormType}>\n                                &nbsp; Войти\n                            </a>\n                        </p>\n                        <LoginFormAdmin\n                            handleChange={handleChange}\n                            handleSubmit={handleSubmit}\n                            errorMessage={errorMessage}\n                            data={data}\n                            inputstyle={inputstyle}\n                            isValid={isValid}\n                        />\n                    </>\n                ) : (\n                    <>\n                        <p>\n                            Вход для пользователя\n                            <a role=\"button\" onClick={toggleFormType}>\n                                &nbsp; Войти\n                            </a>\n                        </p>\n                        <LoginFormUser\n                            handleChange={handleChange}\n                            handleSubmit={handleSubmit}\n                            errorMessage={errorMessage}\n                            data={data}\n                            inputstyle={inputstyle}\n                            isValid={isValid}\n                        />\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\nexport default Login;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst NavProfile = () => {\r\n    const { currentUser } = useAuth();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const toggleMenu = () => {\r\n        setOpen((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"dropdown\" onClick={toggleMenu}>\r\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n                <p className=\"m-0\" style={{ fontSize: \"24px\" }}>\r\n                    {currentUser.name}\r\n                </p>\r\n            </div>\r\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\r\n                <Link\r\n                    to={`/userlist/${currentUser._id}`}\r\n                    className=\"dropdown-item\"\r\n                >\r\n                    Профиль\r\n                </Link>\r\n                <Link to=\"logout\" className=\"dropdown-item\">\r\n                    Выйти\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport NavProfile from \"./layout/ui/navProfile\";\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    const styleLink = {\n        color: \"black\",\n        opacity: \"0.6\",\n        fontSize: \"1.5em\",\n        fontWeight: \"bold\",\n        textShadow: \"1px 0px 15px #d1cbcb, 0px 0px 40px white\",\n        textDecoration: \"none\"\n    };\n    const arraysLinks = [\n        { link: \"/\", description: \"Главная страница\" },\n        { link: \"/information\", description: \"Информация\" },\n        // { link: \"/informa\", description: \"Инфо\" },\n        { link: \"/login\", description: \"Логин\" }\n    ];\n    return (\n        <nav className=\"navbar\">\n            <div className=\"container-fluid  m-4 bg-secondary bg-gradien bg-opacity-10 p-4 shadow\">\n                <ul\n                    className=\"d-flex justify-content-between m-0\"\n                    style={{ width: \"90%\" }}\n                >\n                    {arraysLinks.map((link) => (\n                        <li\n                            key={link.description}\n                            style={{ listStyle: \"none\" }}\n                        >\n                            {\" \"}\n                            {link.link === \"/login\" && currentUser ? (\n                                <NavProfile />\n                            ) : (\n                                <Link style={styleLink} to={link.link}>\n                                    {link.description}\n                                </Link>\n                            )}\n                        </li>\n                    ))}\n                </ul>\n                {/* <div className=\"d-flex\"> */}\n\n                {/* </div> */}\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./tableHeader.scss\";\nimport { useAuth } from \"../hooks/useAuth\";\nconst TableHeader = () => {\n    const { currentUser } = useAuth();\n    return (\n        <thead className=\"theaderStyle\">\n            <tr>\n                <th>наименование документа</th>\n                <th>\n                    № <nobr>док-та</nobr>\n                </th>\n                <th>дата документа</th>\n                <th>пункт</th>\n                <th>мероприятие</th>\n                <th>доложить на имя</th>\n                <th>срок исполнения</th>\n                {currentUser && currentUser.type === \"admin\" && (\n                    <th>удалить</th>\n                )}\n                <th>исполнитель</th>\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    stateBtn: PropTypes.bool\n};\nexport default TableHeader;\n","const TimerCount = (e) => {\n    const dataTime = e.split(\",\");\n    const dateEndTime = Date.parse(\n        new Date(dataTime[0], dataTime[1] - 1, dataTime[2])\n    );\n    const dateCurrentTime = Date.parse(new Date());\n    const getTime = dateEndTime - dateCurrentTime;\n    const deadline = getTime / (24 * 60 * 60 * 1000);\n    const hours = Math.floor((getTime / (1000 * 60 * 60)) % 24);\n    const timer = (time) => {\n        if (time === 1) {\n            // return `${time} день`;\n            return `${time} д.`;\n        }\n        if (time > 1 && time < 5) {\n            // return `${time} дня`;\n            return `${time} д.`;\n        }\n        if (time > 4 || (25 && time < 21)) {\n            // return `${time} дней`;\n            return `${time} д.`;\n        }\n    };\n    return deadline > 0 && deadline < 1\n        ? hours + \" ч.\"\n        : timer(Math.floor(deadline));\n};\n\nexport default TimerCount;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Executor = ({ id, executor, keys }) => {\r\n    const name = (ID) =>\r\n        executor.map((e) => {\r\n            if (e._id === ID) {\r\n                return e.name;\r\n            }\r\n\r\n            if (typeof ID === \"object\") {\r\n                const namez = ID.map((elem) => {\r\n                    if (elem === e._id) {\r\n                        return e.name + \"; \";\r\n                    }\r\n                    return null;\r\n                });\r\n                return namez;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    return <span key={keys}>{name(id)}</span>;\r\n};\r\nExecutor.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    executor: PropTypes.array,\r\n    keys: PropTypes.string\r\n};\r\nexport default Executor;\r\n// need refactoring function\r\n// \"1638735227\", null, \"1638735223\", \"1638735225\";\r\n","import React from \"react\";\nimport TimerCount from \"../utils/timerCount\";\nimport { Link } from \"react-router-dom\";\nimport \"./tableBody.scss\";\nimport PropTypes from \"prop-types\";\nimport Executor from \"../layout/ui/executor\";\nimport { useAuth } from \"../hooks/useAuth\";\nconst TableBody = ({ data, executor, removeExecutor, setCurrenElem }) => {\n    const { currentUser } = useAuth();\n    function reverseTime(time) {\n        return TimerCount(time.split(\".\").reverse().join(\",\"));\n    }\n\n    function getNumOrTime(time) {\n        const num = time.split(\".\").reverse().join(\".\");\n        // console.log(getDayCount(num));\n        if (getDayCount(num) > 1) {\n            return {\n                background: \"#ffffff\"\n            };\n        }\n        return {\n            background: \"#ed382b5d\"\n        };\n    }\n\n    function getDayCount(dateEndTime) {\n        const dateCurrentTime = Date.parse(new Date());\n        const getTime = Date.parse(dateEndTime) - dateCurrentTime;\n        const deadline = Math.floor(getTime / (24 * 60 * 60 * 1000));\n        return deadline;\n    }\n    // console.log(Number(new Date(\"24.03.2022\")));\n    const clickBtn = (el) => {\n        removeExecutor(el);\n    };\n    return (\n        <tbody className=\"tbodyStyle\">\n            {data.map(\n                (el, i) =>\n                    el.inWork.length !== 0 && (\n                        <tr\n                            style={\n                                el.inWork.length !== 0\n                                    ? getNumOrTime(el.periodOfExecution)\n                                    : { background: \"#9df2bf6a\" }\n                            }\n                            key={el.id}\n                        >\n                            <td>{el.nameDoc}</td>\n                            <td>№ {el.numberDoc}</td>\n                            <td>{el.dateDoc}</td>\n                            <td>{el.punctDoc}</td>\n                            <td style={{ maxWidth: \"80vw\", minWidth: \"20vw\" }}>\n                                <Link to={`/${el._id}`} className=\"dark\">\n                                    {el.executionOrder}\n                                </Link>\n                            </td>\n                            <td>{el.nameInitiator}</td>\n                            <td>\n                                {/* {Date.parse(new Date()) -\n                                    Date.parse(el.periodOfExecution)} */}\n                                {el.periodOfExecution} <br />\n                                {el.inWork.length === 0\n                                    ? \" прошло\"\n                                    : \" осталось\"}{\" \"}\n                                <br />\n                                {reverseTime(el.periodOfExecution)}\n                            </td>\n                            {currentUser && currentUser.type === \"admin\" && (\n                                <td>\n                                    {el.inWork.length !== 0 && (\n                                        <button\n                                            onClick={() => clickBtn(el)}\n                                            className=\"btn btn-light p-1 m-1 hoverz\"\n                                        >\n                                            снять контроль\n                                        </button>\n                                    )}\n                                </td>\n                            )}\n                            {el.inWork.length !== 0 ? (\n                                <td>\n                                    <Executor\n                                        keys={el._id}\n                                        id={el.inWork}\n                                        executor={executor}\n                                    />\n                                </td>\n                            ) : (\n                                <td className=\"event-complete\">\n                                    <span>мероприятие выполнено</span>\n                                </td>\n                            )}\n                        </tr>\n                    )\n            )}\n        </tbody>\n    );\n};\nTableBody.propTypes = {\n    data: PropTypes.array,\n    executor: PropTypes.array,\n    stateBtn: PropTypes.bool,\n    removeExecutor: PropTypes.func,\n    setCurrenElem: PropTypes.func\n};\nexport default TableBody;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({\n    itemsCount,\n    pageSize,\n    onPageChange,\n    currentPage,\n    nextPage,\n    prevPage\n}) => {\n    const gridCenter = {\n        gridColumnStart: 2\n    };\n\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    // console.log(pageCount);\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <>\n            {pageCount > 1 ? (\n                <nav\n                    aria-label=\"d-flex Page navigation example\"\n                    style={gridCenter}\n                >\n                    <ul className=\"pagination justify-content-center\">\n                        <li\n                            className={\n                                \"page-item \" +\n                                (currentPage === 1 ? \"disabled\" : \"\")\n                            }\n                        >\n                            <a className=\"page-link\" onClick={prevPage}>\n                                Предыдущая\n                            </a>\n                        </li>\n                        {/* &nbsp; */}\n                        {pages.map((page) => (\n                            <li\n                                key={page}\n                                className=\"page-item \"\n                                //   className={\n                                //     // \"page-item \" +\n                                //     page === currentPage ? \"badge bg-secondary\" : \"\"\n                                //   }\n                            >\n                                <a\n                                    className={\n                                        \"page-link \" +\n                                        (page === currentPage\n                                            ? \"bg-secondary\"\n                                            : \"\")\n                                    }\n                                    onClick={() => onPageChange(page)}\n                                    style={{ color: \"red\" }}\n                                >\n                                    {page}\n                                </a>\n                            </li>\n                        ))}\n                        {/* &nbsp; */}\n                        <li\n                            className={\n                                \"page-item \" +\n                                (currentPage === pageCount ? \"disabled\" : \"\")\n                            }\n                        >\n                            <a\n                                className=\"page-link \"\n                                href=\"#\"\n                                onClick={nextPage}\n                            >\n                                Следующая\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            ) : null}\n        </>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    nextPage: PropTypes.func.isRequired,\n    prevPage: PropTypes.func.isRequired\n};\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./listGroupTask.scss\";\nconst ListGroupTask = ({\n    item,\n    onItemSelect,\n    selectExecutor,\n    handleResetFilter\n}) => {\n    const styleText = (id) => {\n         // console.log(item);\n         // console.log(selectExecutor);\n        if (selectExecutor && selectExecutor._id === id) {\n            return \"styleText\";\n        }\n        return \"\";\n    };\n\n    return (\n        <div>\n            <ul\n                className=\"list-group list-group-flush\"\n                style={{ marginRight: \"1em\" }}\n            >\n                {Object.values(item).map((e) => (\n                    <li\n                        key={e._id}\n                        className={`list-group-item ${styleText(e._id)}`}\n                        role=\"button\"\n                        onClick={() => onItemSelect(e)}\n                    >\n                        {e.name}\n                    </li>\n                ))}\n            </ul>\n            <button\n                className=\"btn btn-outline-secondary mt-2\"\n                style={{ marginRight: \"1em\" }}\n                onClick={handleResetFilter}\n            >\n                все исполнители\n            </button>\n        </div>\n    );\n};\nListGroupTask.propTypes = {\n    item: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    onItemSelect: PropTypes.func,\n    selectExecutor: PropTypes.object,\n    handleResetFilter: PropTypes.func\n};\nexport default ListGroupTask;\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\nconst MultiSelectField = ({ options, onChange, name, label, style }) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  label: options[optionName].name,\r\n                  value: options[optionName].id\r\n              }))\r\n            : options;\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className={style}>\r\n            <label> {label}</label>\r\n            <Select\r\n                isMulti\r\n                closeMenuOnSelect={false}\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nMultiSelectField.propTypes = {\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    style: PropTypes.string\r\n};\r\nexport default MultiSelectField;\r\n","import httpService from \"./httpService\";\r\n\r\nconst executorEndPoint = \"executor/\";\r\n\r\nconst executorService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(executorEndPoint);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default executorService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport executorService from \"../service/executorService\";\r\nconst ExecutorContext = React.createContext();\r\n\r\nexport const useExecutor = () => {\r\n    return useContext(ExecutorContext);\r\n};\r\n\r\nexport const ExecutorProvider = ({ children }) => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [executor, setExecutor] = useState();\r\n    useEffect(() => {\r\n        getExecutor();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n    async function getExecutor() {\r\n        try {\r\n            const { content } = await executorService.get();\r\n            setExecutor(content);\r\n            setLoading(true);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    return (\r\n        <ExecutorContext.Provider value={{ isLoading, executor }}>\r\n            { isLoading ? children : \"loading...\" }\r\n        </ExecutorContext.Provider>\r\n    );\r\n};\r\nExecutorProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import httpService from \"./httpService\";\r\nimport localStorageService from \"./localStorageService\";\r\n\r\nconst docDataEndPoint = \"/docData/\";\r\n\r\nconst docDataService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(docDataEndPoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        // console.log(payload);\r\n        const data = await httpService.put(\r\n            docDataEndPoint + payload._id,\r\n            payload\r\n        );\r\n        console.log(data);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        console.log(payload);\r\n        const { data } = await httpService.patch(\r\n            docDataEndPoint + localStorageService.getUserId(),\r\n            payload\r\n        );\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default docDataService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setTokens } from \"../service/localStorageService\";\r\nimport docDataService from \"../service/docService\";\r\nimport configFile from \"../../configFile.json\";\r\nconst httpAuth = axios.create({\r\n    baseURL: configFile.apiPath + \"/auth/\"\r\n});\r\nconst AddDataDocContext = React.createContext();\r\n\r\nexport const useAddData = () => {\r\n    return useContext(AddDataDocContext);\r\n};\r\nconst AddDataProvider = ({ children }) => {\r\n    const [currentUser, setUser] = useState({});\r\n    // const [isAdmin, setIsAdmin] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    async function signUpData({ nameExecutor, ...rest }) {\r\n        const url = `signUpData`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                ...rest\r\n            });\r\n            setTokens(data);\r\n            // console.log(nameExecutor);\r\n            await createData({ _id: data.userId, nameExecutor, ...rest });\r\n            // console.log(...rest);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            console.log(code, message);\r\n            if (code === 400) {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n    }\r\n    async function updateData({ ...rest }) {\r\n        // console.log(rest);\r\n        const url = `updateData`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, {\r\n                ...rest\r\n            });\r\n            setTokens(data);\r\n            // console.log(data);\r\n            // console.log(nameExecutor);\r\n            // await createUser({ _id: data.userId, nameExecutor, ...rest });\r\n            // console.log(...rest);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            console.log(code, message);\r\n            if (code === 400) {\r\n                console.log(\"error\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // console.log(updateData);\r\n    async function createData(data) {\r\n        try {\r\n            const content = await docDataService.update(data);\r\n            setUser((prevState) => [...prevState, content]);\r\n            console.log(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <AddDataDocContext.Provider\r\n            value={{ signUpData, currentUser, updateData }}\r\n        >\r\n            {children}\r\n        </AddDataDocContext.Provider>\r\n    );\r\n};\r\nAddDataProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\nexport default AddDataProvider;\r\n","function sortData(arr) {\r\n    for (let i = 0; i <= 2; i++) {\r\n        arr.sort(function (b, a) {\r\n            a = a.periodOfExecution.split(\"-\");\r\n            b = b.periodOfExecution.split(\"-\");\r\n            return a[i] > b[i] ? -1 : a[i] < b[i] ? 1 : 0;\r\n        });\r\n    }\r\n    return arr;\r\n}\r\nexport default sortData;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport docDataService from \"../service/docService\";\r\nimport PropTypes from \"prop-types\";\r\nimport sortData from \"../utils/sortData\";\r\n\r\nconst DocDataContext = React.createContext();\r\n\r\nexport const useDocData = () => {\r\n    return useContext(DocDataContext);\r\n};\r\n\r\nexport const DocDataProvider = ({ children }) => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [docData, setDocData] = useState([]);\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n        setLoading(false);\r\n    }\r\n    async function getData() {\r\n        try {\r\n            const { content } = await docDataService.get();\r\n            const sortContent = sortData(content);\r\n            setDocData(sortContent);\r\n            setLoading(true);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    return (\r\n        <DocDataContext.Provider value={{ docData, isLoading, getData }}>\r\n            {isLoading ? children : \"loading data\"}\r\n        </DocDataContext.Provider>\r\n    );\r\n};\r\nDocDataProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MultiSelectField from \"./multiSelectField\";\r\nimport { useExecutor } from \"../hooks/useExecutor\";\r\nimport \"./removeFormExecutor.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useAddData } from \"../hooks/useAddDocData\";\r\nimport { useDocData } from \"../hooks/useDocData\";\r\n\r\nconst RemoveFormExecutor = ({ stateDispaly, setStateDispaly, selectData }) => {\r\n    const [data, setData] = useState({\r\n        inWork: []\r\n    });\r\n    const { executor } = useExecutor();\r\n    const { updateData } = useAddData();\r\n    const { getData } = useDocData();\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevstate) => ({\r\n            ...prevstate,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    // console.log(selectData);\r\n    const executorList = executor.map((q) => ({\r\n        label: q.name,\r\n        value: q._id\r\n    }));\r\n\r\n    function search(arrOne, arrTwo) {\r\n        const result = [];\r\n        arrOne.forEach(function (elem) {\r\n            if (arrTwo.indexOf(elem) === -1) {\r\n                result.push(elem);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function search2(arrOne, arrTwo) {\r\n        const arr = [];\r\n        for (const key of arrOne) {\r\n            for (const el of arrTwo) {\r\n                if (key._id.indexOf(el) !== -1) {\r\n                    arr.push(key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const executorList = arr.map((q) => ({\r\n            label: q.name,\r\n            value: q._id\r\n        }));\r\n        return executorList;\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const newInWork = data.inWork.map((q) => q.value);\r\n            const inWork = search(selectData.inWork, newInWork);\r\n            const newData = {\r\n                ...selectData,\r\n                inWork\r\n            };\r\n            updateData(newData);\r\n            getData();\r\n        } catch (error) {\r\n            console.log(error);\r\n            console.log(error.message);\r\n        }\r\n    };\r\n    const hiddenPopap = () => {\r\n        setStateDispaly(\"hidden\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`removeExecutorStyle ${stateDispaly}`}>\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className=\"d-flex flex-column align-items-center\"\r\n                >\r\n                    <div className=\"d-flex \">\r\n                        <div className=\"selectContainer\">\r\n                            <MultiSelectField\r\n                                options={\r\n                                    selectData\r\n                                        ? search2(executor, selectData.inWork)\r\n                                        : executorList\r\n                                }\r\n                                onChange={handleChange}\r\n                                name=\"inWork\"\r\n                                label=\"Снять с контроля\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={hiddenPopap} className={`btn btn-light `}>\r\n                        Сохранить\r\n                    </button>\r\n                </form>\r\n                <button className=\" btn hover closeModal\" onClick={hiddenPopap}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nRemoveFormExecutor.propTypes = {\r\n    stateDispaly: PropTypes.string,\r\n    setStateDispaly: PropTypes.func,\r\n    selectData: PropTypes.object\r\n};\r\nexport default RemoveFormExecutor;\r\n","import React, { useState, useEffect } from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\nimport Pagination from \"../pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport PropTypes from \"prop-types\";\nimport ListGroupTask from \"../listGroupTask\";\n// import SearchPanel from \"../searchPanel\";\nimport \"./tableDoc.scss\";\nimport RemoveFormExecutor from \"../form/removeFormExecutor\";\n\nconst styleGrid = {\n    gridTemplateColumns: \"140px 1fr\",\n    margin: \"0 25px\"\n};\n\nconst TableDoc = ({ docData, executor }) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectExecutor, setSelect] = useState();\n    const [selectData, setSelectData] = useState();\n    const [count, setCount] = useState(docData.length);\n    const [stateDispaly, setStateDispaly] = useState(\"hidden\");\n    // const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const pageSize = 250;\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n\n    const handleNextPage = () => {\n        setCurrentPage(currentPage + 1);\n    };\n    const handlePrevPage = () => {\n        setCurrentPage(currentPage - 1);\n    };\n    const handleTaskSelect = (elem) => {\n        setSelect(elem);\n    };\n    const handleResetFilter = () => {\n        setSelect();\n    };\n\n    const findExecutor = (elem) => {\n        if (typeof elem.inWork === \"object\") {\n            const getExecutor = elem.inWork.filter(\n                (executor) => executor === selectExecutor._id\n            );\n            return getExecutor[0];\n        }\n        return elem.inWork === selectExecutor._id;\n    };\n    // if (docData) {\n\n    const filteredExecutor =\n        //  searchQuery\n        //     ? docData.filter((data) =>\n        //           data.nameDoc\n        //               .toLowerCase()\n        //               .indexOf(searchQuery.toLowerCase() !== -1)\n        //       )\n        //     :\n        selectExecutor ? docData.filter((user) => findExecutor(user)) : docData;\n    useEffect(() => {\n        setCount(filteredExecutor.length);\n    }, [filteredExecutor.length]);\n    const dataUserCrop = paginate(filteredExecutor, currentPage, pageSize);\n    const countTasks = dataUserCrop.filter((e) => {\n        return e.inWork.length > 0;\n    });\n    // }\n    const removeExecutor = (e) => {\n        setStateDispaly(\"show\");\n        setSelectData(e);\n    };\n    // const handleSearch = ({ target }) => {\n    //     setSearchQuery(target.value);\n    //     console.log(searchQuery);\n    // };\n    // console.log(filteredExecutor);\n    // console.log(\n    //     docData.map((data) =>\n    //         // data.nameDoc.toLowerCase().indexOf(searchQuery.toLowerCase() !== -1)\n    //         data.nameDoc.toLowerCase().indexOf(searchQuery.toLowerCase() !== -1)\n    //     )\n    // );\n    return (\n        <>\n            <div className=\"d-flex justify-content-around\">\n                <div> Задач к исполнению всего {countTasks.length} </div>\n                {/* <SearchPanel onChange={handleSearch} value={searchQuery} /> */}\n            </div>\n            <div className=\"d-grid  m-4\" style={styleGrid}>\n                <ListGroupTask\n                    item={executor}\n                    onItemSelect={handleTaskSelect}\n                    selectExecutor={selectExecutor}\n                    handleResetFilter={handleResetFilter}\n                />\n\n                {filteredExecutor.length > 0 ? (\n                    <table className=\"tableMain\">\n                        <TableHeader />\n                        <TableBody\n                            data={dataUserCrop}\n                            executor={executor}\n                            removeExecutor={removeExecutor}\n                        />\n                    </table>\n                ) : (\n                    <h1>Нет задач к исполнению</h1>\n                )}\n                <RemoveFormExecutor\n                    stateDispaly={stateDispaly}\n                    setStateDispaly={setStateDispaly}\n                    selectData={selectData}\n                />\n\n                {count >= pageSize ? (\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        onPageChange={handlePageChange}\n                        currentPage={currentPage}\n                        nextPage={handleNextPage}\n                        prevPage={handlePrevPage}\n                    />\n                ) : null}\n            </div>\n        </>\n    );\n};\nTableDoc.propTypes = {\n    docData: PropTypes.array,\n    executor: PropTypes.array\n};\nexport default TableDoc;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    //   _.slice(items, startIndex);\n    //   _.take(_.slice(items, startIndex), pageSize);\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport TimerCount from \"../utils/timerCount\";\nimport PropTypes from \"prop-types\";\nimport Executor from \"../layout/ui/executor\";\nimport { useAuth } from \"../hooks/useAuth\";\nconst RaportData = ({ data, executor }) => {\n    const { currentUser } = useAuth();\n    // console.log(currentUser);\n    const history = useHistory();\n    const returnTable = () => {\n        if (currentUser && currentUser.type === \"user\") {\n            history.replace(`/userlist/${currentUser._id}`);\n        } else {\n            history.replace(`/`);\n        }\n        // history.replace(\"/\");\n    };\n\n    const reversString = (string) => {\n        return string.split(\".\").reverse().join(\",\");\n    };\n    const time = TimerCount(reversString(data.periodOfExecution));\n    const num = Number(time.split(\" \")[0]);\n    const currentColorRow =\n        num < 0 ? { color: \"tomato\", fontSize: \"2em\" } : { color: \"grey\" };\n    return (\n        <div className=\"d-flex flex-column align-items-center bg-secondary bg-gradien bg-opacity-10 shadow text-black p-5 m-4\">\n            <div>\n                {data.nameDoc} от {data.dateDoc} года, пункт {data.punctDoc}\n            </div>\n            <p>форма доклада: {data.typeDoc}</p>\n            <p>документ представить на имя: {data.nameInitiator}</p>\n            <p>срок исполнения до: {data.periodOfExecution} года</p>\n            <p style={currentColorRow}>до исхода осталось: {time}</p>\n            <p>\n                исполнитель(и):{\" \"}\n                <Executor\n                    id={data.executorName}\n                    executor={executor}\n                    keys={data._id}\n                />\n            </p>\n            <h5>Мероприятие: {data.executionOrder}</h5>\n            <button\n                className=\"btn btn-outline-secondary\"\n                onClick={() => returnTable()}\n            >\n                вернуться назад\n            </button>\n        </div>\n    );\n};\nRaportData.propTypes = {\n    data: PropTypes.object.isRequired,\n    executor: PropTypes.array.isRequired\n};\nexport default RaportData;\n","import React from \"react\";\nimport TableDoc from \"../table/tableDoc\";\nimport { useParams } from \"react-router-dom\";\nimport RaportData from \"../table/raportData\";\nimport { useDocData } from \"../hooks/useDocData\";\nimport { useExecutor } from \"../hooks/useExecutor\";\n\nconst RaportList = () => {\n    const { docData, isLoading } = useDocData();\n\n    const { executor } = useExecutor();\n    const params = useParams();\n    const { _id } = params;\n    const findeData = (id) => {\n        return docData.find((user) => String(user._id) === id);\n    };\n    const user = findeData(_id);\n\n    return user !== undefined ? (\n        <RaportData data={user} executor={executor} />\n    ) : isLoading ? (\n        <TableDoc docData={docData} executor={executor} />\n    ) : (\n        <h1 className=\"d-flex justify-content-center mt-4\">\n            Загрузка данных...\n        </h1>\n    );\n};\nexport default RaportList;\n","import React, { useState, useEffect } from \"react\";\nimport FormField from \"./formField\";\nimport { useExecutor } from \"./hooks/useExecutor\";\nimport MultiSelectField from \"./form/multiSelectField\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAddData } from \"./hooks/useAddDocData\";\nimport { useDocData } from \"./hooks/useDocData\";\nimport \"./createNewDataTable.scss\";\nconst CreateNewDataTable = () => {\n    const [data, setData] = useState({\n        numberDoc: \"\",\n        punctDoc: \"\",\n        dateDoc: \"\",\n        nameDoc: \"\",\n        typeDoc: \"\",\n        nameInitiator: \"\",\n        periodOfExecution: \"\",\n        executionOrder: \"\",\n        nameExecutor: [],\n        inWork: []\n    });\n    const { executor } = useExecutor();\n    const { currentUser } = useAuth();\n    const { signUpData } = useAddData();\n    const { getData } = useDocData();\n    const history = useHistory();\n\n    const executorList = executor.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            setError(null);\n        }\n    }, [error]);\n\n    const getId = Date.parse(new Date());\n    const handleChange = (target) => {\n        // console.log(target);\n        setData((prevstate) => ({\n            ...prevstate,\n            [target.name]: target.value\n        }));\n    };\n    const handleChangeForText = ({ target }) => {\n        setData((prevstate) => ({\n            ...prevstate,\n            [target.name]: target.value\n        }));\n    };\n    const executorName = data.nameExecutor.map((q) => q.value);\n\n    const convertTime = (time) => {\n        return time.split(\"-\").reverse().join(\".\");\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        try {\n            const newData = {\n                ...data,\n                id: getId,\n                executorName,\n                inWork: executorName,\n                dateDoc: convertTime(data.dateDoc),\n                periodOfExecution: convertTime(data.periodOfExecution)\n            };\n            signUpData(newData);\n            history.push(history.push(`/userlist/${currentUser._id}`));\n            getData();\n        } catch (error) {\n            console.log(error);\n            console.log(error.message);\n        }\n        /*        finally {\n            setData({\n                punctDoc: \"\",\n                dateDoc: \"\",\n                nameDoc: \"\",\n                typeDoc: \"\",\n                nameInitiator: \"\",\n                periodOfExecution: \"\",\n                executionOrder: \"\",\n                nameExecutor: [],\n                inWork: []\n});\n        } */\n    };\n    const clickBack = () => {\n        history.push(`/userlist/${currentUser._id}`);\n    };\n    // нужно будет сделать валидацию вводу (правильно , неправильно , все ли данные введены и т.д.)\n    return (\n        <div className=\"m-4\">\n            <button className=\"btn btn-outline-secondary\" onClick={clickBack}>\n                назад\n            </button>\n            <h3 className=\"text-center\">\n                Вносим данные для отображения в таблице\n            </h3>\n            <form\n                onSubmit={handleSubmit}\n                className=\"d-flex flex-column align-items-center\"\n            >\n                <div className=\"d-flex flex-row justify-content-center flex-wrap\">\n                    <div className=\"wrapper-field wrapper-field-left\">\n                        <FormField\n                            nameLabel={\"название док-та\"}\n                            name=\"nameDoc\"\n                            onChange={handleChangeForText}\n                            value={data.nameDoc}\n                            description={\"Военный совет\"}\n                            type=\"text\"\n                        />\n                        <FormField\n                            name=\"numberDoc\"\n                            value={data.numberDoc}\n                            onChange={handleChangeForText}\n                            nameLabel={\"номер документа\"}\n                            description={\"шт 300/500-234\"}\n                            type=\"text\"\n                        />\n                        <FormField\n                            name=\"punctDoc\"\n                            value={data.punctDoc}\n                            onChange={handleChangeForText}\n                            nameLabel={\"пункт документа\"}\n                            description={\"2.3.1\"}\n                            type=\"text\"\n                        />\n                        <FormField\n                            name=\"dateDoc\"\n                            nameLabel={\"дата документа\"}\n                            value={data.dateDoc}\n                            onChange={handleChangeForText}\n                            description={\"12.09.2021\"}\n                            type=\"date\"\n                        />\n                    </div>\n                    <div className=\"wrapper-field wrapper-field-right\">\n                        <FormField\n                            onChange={handleChangeForText}\n                            nameLabel={\"инициатор\"}\n                            description={\"Пупкин А.А.\"}\n                            name=\"nameInitiator\"\n                            value={data.nameInitiator}\n                            type=\"text\"\n                        />\n                        <FormField\n                            nameLabel={\"вид доклада\"}\n                            name=\"typeDoc\"\n                            onChange={handleChangeForText}\n                            value={data.typeDoc}\n                            description={\"пояснительная записка\"}\n                            type=\"text\"\n                        />\n                        <FormField\n                            onChange={handleChangeForText}\n                            nameLabel={\"исполнить до\"}\n                            name=\"periodOfExecution\"\n                            value={data.periodOfExecution}\n                            description={\"2021,31,12\"}\n                            type=\"date\"\n                        />\n                    </div>\n                    <MultiSelectField\n                        options={executorList}\n                        onChange={handleChange}\n                        name=\"nameExecutor\"\n                        label=\"Выбрать исполнителя\"\n                    />\n                </div>\n                <div className=\"input-group m-4 \">\n                    <span className=\"input-group-text\">Описание документа</span>\n                    <textarea\n                        onChange={handleChangeForText}\n                        className=\"form-control\"\n                        aria-label=\"With textarea\"\n                        name=\"executionOrder\"\n                        value={data.executionOrder}\n                        description={\"описание задачи\"}\n                    ></textarea>\n                </div>\n                <button className=\"btn btn-outline-secondary\">\n                    Добавить данные в контроль\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateNewDataTable;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error,\r\n    name\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        // console.log(name);\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    // const handleChange = (value) => {\r\n    //     console.log(value);\r\n    //     onChange({ name: name, value });\r\n    //     // console.log(onChange);\r\n    // };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  name: options[optionName].name,\r\n                  value: options[optionName].id\r\n              }))\r\n            : options;\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                id=\"validationCustom04\"\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nSelectField.propTypes = {\r\n    defaultOption: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import \"./chekField.scss\";\r\nconst CheckField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4 d-flex flex-column align-items-center\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"d-flex form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            checked={option.value === value}\r\n                            value={option.value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label mx-3\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCheckField.propTypes = {\r\n    options: PropTypes.array,\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string\r\n};\r\n\r\nexport default CheckField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FormField from \"./formField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { validator } from \"./utils/ validator\";\r\nimport { useExecutor } from \"./hooks/useExecutor\";\r\nimport SelectField from \"./form/selectField\";\r\nimport { useAuth } from \"./hooks/useAuth\";\r\nimport CheckField from \"./form/checkField\";\r\nconst FormRegisterUser = () => {\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n        executor: \"\",\r\n        type: \"user\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const history = useHistory();\r\n    const { signUp, signUpAdmin, currentUser } = useAuth();\r\n    const { executor } = useExecutor();\r\n    const executorList = executor.map((q) => ({\r\n        label: q.name,\r\n        value: q._id\r\n    }));\r\n    const handleChange = ({ target }) => {\r\n        setData((prevstate) => ({\r\n            ...prevstate,\r\n            [target.name]: target.value\r\n        }));\r\n        setErrorMessage(null);\r\n    };\r\n    const handleChangeSelectForm = (target) => {\r\n        setData((prevstate) => ({\r\n            ...prevstate,\r\n            [target.name]: target.value\r\n        }));\r\n        setErrorMessage(null);\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязательна для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        try {\r\n            console.log(data);\r\n            if (data.type === \"admin\") {\r\n                await signUpAdmin(data);\r\n            }\r\n            if (data.type === \"user\") {\r\n                await signUp(data);\r\n            }\r\n        } catch (error) {\r\n            setErrors(error);\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n    const inputstyle = {\r\n        textAlign: \"center\",\r\n        padding: \"8px\",\r\n        borderRadius: \"12px\",\r\n        border: \"none\",\r\n        outline: \"none\",\r\n        boxShadow: \"1px 1px 14px #d1cbcb\"\r\n        // boxShadow: \"1px 1px 14px #ff9494\"\r\n    };\r\n    const clickBack = () => {\r\n        history.push(`/userlist/${currentUser._id}`);\r\n    };\r\n    return (\r\n        <>\r\n            <button onClick={clickBack}>назад</button>\r\n            <form\r\n                style={{ width: \"20%\" }}\r\n                onSubmit={handleSubmit}\r\n                className=\"d-flex flex-column align-items-center mt-2\"\r\n            >\r\n                {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n                <FormField\r\n                    name=\"email\"\r\n                    value={data.email}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Создать логин\"}\r\n                    description={\"введите логин\"}\r\n                    type=\"text\"\r\n                />\r\n                <FormField\r\n                    name=\"password\"\r\n                    value={data.password}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Создать пароль\"}\r\n                    description={\"введите пароль\"}\r\n                    type=\"text\"\r\n                />\r\n                <FormField\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    styleInput={inputstyle}\r\n                    nameLabel={\"Создать имя\"}\r\n                    description={\"введите имя\"}\r\n                    type=\"text\"\r\n                />\r\n                <SelectField\r\n                    label=\"Выбрать подразделение\"\r\n                    defaultOption=\"выбрать.....\"\r\n                    name=\"executor\"\r\n                    options={executorList}\r\n                    onChange={handleChangeSelectForm}\r\n                    value={data.executor}\r\n                    error={errors.executor}\r\n                />\r\n                <CheckField\r\n                    options={[\r\n                        { name: \" Права администратора\", value: \"admin\" },\r\n                        { name: \"Права пользователя\", value: \"user\" }\r\n                    ]}\r\n                    value={data.type}\r\n                    name=\"type\"\r\n                    onChange={handleChangeSelectForm}\r\n                    label=\"Выберите тип\"\r\n                />\r\n                <button\r\n                    style={{\r\n                        border: \"none\",\r\n                        boxShadow: \"0px 0px 34px #d1cbcb\"\r\n                    }}\r\n                    className=\"btn btn-outline-secondary mt-4 d-md-flex justify-content-md-center\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid || errorMessage}\r\n                >\r\n                    ввести данные\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormRegisterUser;\r\n","import React, { useState } from \"react\";\r\nimport CreateNewDataTable from \"./createNewDataTable\";\r\nimport FormRegisterUser from \"./formRegisterUser\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst AdminPanel = () => {\r\n    const { type } = useParams();\r\n    const [formType, setFormType] = useState(\r\n        type === \"addData\" ? type : \"addUser\"\r\n    );\r\n    const toggleFormType = () => {\r\n        setFormType((prevState) =>\r\n            prevState === \"addData\" ? \"addUser\" : \"addData\"\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n            <h1 className=\"mb-4\">Панель администратора</h1>\r\n            {formType === \"addData\" ? (\r\n                <>\r\n                    <p>\r\n                        <a role=\"button\" onClick={toggleFormType}>\r\n                            добавить пользователя\r\n                        </a>\r\n                    </p>\r\n                    <CreateNewDataTable />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <p>\r\n                        <a role=\"button\" onClick={toggleFormType}>\r\n                            добавить новую задачу\r\n                        </a>\r\n                    </p>\r\n                    <FormRegisterUser />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nconst LogOut = () => {\r\n    const { logOut } = useAuth();\r\n    useEffect(() => {\r\n        logOut();\r\n    }, []);\r\n    return <h1>Загрузка...</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RemoveFormExecutor from \"../form/removeFormExecutor\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n// import { useDocData } from \"../hooks/useDocData\";\r\n// import { useExecutor } from \"../hooks/useExecutor\";\r\n// import TableBody from \"./tableBody\";\r\n// import TableHeader from \"./tableHeader\";\r\n\r\nconst UserDataList = () => {\r\n    const { currentUser } = useAuth();\r\n    // const { executor } = useExecutor();\r\n    // const { docData } = useDocData();\r\n\r\n    const [stateDispaly, setStateDispaly] = useState(\"hidden\");\r\n    // const [selectData, setSelectData] = useState();\r\n\r\n    // const removeExecutor = (e) => {\r\n    //     setStateDispaly(\"show\");\r\n    //     setSelectData(e);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {currentUser && currentUser.type === \"admin\" ? (\r\n                <div className=\" d-flex justify-content-center  mb-4\">\r\n                    <Link className=\"btn btn-secondary mx-4 \" to=\"/AdminPanel\">\r\n                        добавить пользователя\r\n                    </Link>\r\n                    <Link\r\n                        className=\"btn btn-secondary mx-4\"\r\n                        to=\"/createNewDataTable\"\r\n                        role=\"button\"\r\n                    >\r\n                        Внести в контроль\r\n                    </Link>\r\n                </div>\r\n            ) : null}\r\n            {/* <table>\r\n                <TableHeader />\r\n                <TableBody\r\n                    data={docData}\r\n                    executor={executor}\r\n                    removeExecutor={removeExecutor}\r\n                />\r\n            </table> */}\r\n            <RemoveFormExecutor\r\n                stateDispaly={stateDispaly}\r\n                setStateDispaly={setStateDispaly}\r\n                // selectData={selectData}\r\n            />\r\n\r\n            {/* {currentUser && currentUser.type === \"admin\" && (\r\n\r\n            )} */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserDataList;\r\n","import React from \"react\";\nimport Information from \"./components/layout/information\";\nimport Login from \"./components/layout/login\";\nimport NavBar from \"./components/navBar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RaportList from \"./components/layout/raportList\";\nimport { DocDataProvider } from \"./components/hooks/useDocData\";\nimport { ExecutorProvider } from \"./components/hooks/useExecutor\";\nimport AuthProvider from \"./components/hooks/useAuth\";\nimport AddDataProvider from \"./components/hooks/useAddDocData\";\nimport AdminPanel from \"./components/adminPanel\";\nimport \"./App.scss\";\nimport LogOut from \"./components/layout/logOut\";\nimport UserDataList from \"./components/table/userDataList\";\nimport CreateNewDataTable from \"./components/createNewDataTable\";\nfunction App() {\n    return (\n        <>\n            <DocDataProvider>\n                <AuthProvider>\n                    <AddDataProvider>\n                        <NavBar />\n                        <ExecutorProvider>\n                            <Switch>\n                                <Route\n                                    path=\"/information\"\n                                    component={Information}\n                                />\n                                <Route\n                                    path=\"/AdminPanel/:type?\"\n                                    component={AdminPanel}\n                                />\n                                <Route path=\"/logout\" component={LogOut} />\n                                <Route\n                                    path=\"/userlist\"\n                                    component={UserDataList}\n                                />\n                                <Route\n                                    path=\"/createNewDataTable\"\n                                    component={CreateNewDataTable}\n                                />\n                                <Route path=\"/login/:type?\" component={Login} />\n                                <Route\n                                    exact\n                                    path=\"/:_id?\"\n                                    component={RaportList}\n                                />\n                            </Switch>\n                        </ExecutorProvider>\n                    </AddDataProvider>\n                </AuthProvider>\n            </DocDataProvider>\n        </>\n    );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}